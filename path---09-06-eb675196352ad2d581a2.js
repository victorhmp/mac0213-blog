webpackJsonp([0xefcd158bf368],{408:function(e,o){e.exports={data:{site:{siteMetadata:{title:"MAC0213 Blog",author:"Victor Hugo M. Pinto"}},markdownRemark:{id:"/Users/victorhugo/Projects/mac213-blog/src/pages/09-06/index.md absPath of file >>> MarkdownRemark",html:'<p>Durante a semana dos dias 09/06 à 15/06, dei os passos finais para concluir a conteinerização da FATIMA.</p>\n<p>O time da SMIT no nosso servidor do Slack e eles me passaram instruções de como utilizar o Apache HTTP Server e decidi que seria melhor como base a imagem oficial no <em>Docker Hub</em>.</p>\n<p>Escrevi uma Dockerfile nova que usa a Apache HTTP server como base, instala Node.js e NPM no contêiner e depois usa o próprio NPM para instalar o Gulp, que então executa o build e por fim coloca o resultado no diretório /usr/local/apache2/htdocs/ do container para ser servida pela porta 3001.</p>\n<p>Com os três módulos funcionando, atualizei o arquivo <code class="language-text">docker-compose.yml</code> que lida com o processo de criação e build dos três contêineres, cria os volumes necessários para persistência de cada um e cria a network que eles precisam para se comunicar.</p>\n<p>Em uma reunião com o time da SMIT, testamos o funcionamento completo da plataforma já completamente dockerizada e vimos que tudo estava funcionando como devia, menos a funcionalidade de geração de PDFs de forma persistente. Esse problema foi resolvido com a criação de mais um volume no docker-compose.yml que é mapeado e compartilhado pelos contêineres do <em>front-end</em> e do <em>back-end</em>.</p>\n<p><strong>Horas</strong>: 5 horas</p>',frontmatter:{title:"Conteinerização (Pt. 8)",date:"June 16, 2019"}}},pathContext:{slug:"/09-06/",previous:{fields:{slug:"/02-06/"},frontmatter:{title:"Conteinerização (Pt. 7)"}},next:{fields:{slug:"/16-06/"},frontmatter:{title:"Teste de configuração (GitLab CI/CD)"}}}}}});
//# sourceMappingURL=path---09-06-eb675196352ad2d581a2.js.map